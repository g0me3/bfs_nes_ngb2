
MISC

- музыкальный движок, спользованный в этой игре, идентичен использованному позже в игре Kirby от той же HAL Laboratory и многих других игр того же разработчика (GSX SUGA), например две поздние части Lolo и Uchubitai SDF. Музыкальные данные фактически могут быть перенесены из одной игры в другую, необходимо только подправлять библиотеку кодовых последовательностей (что-то вроде словаря) и DPCM семплы - они в играх разные.
- алгоритм упаковки тайловых карт идентичен тому, который используется в игре kirby от той же конторы, что говорит нам, что он был разработан гораздо раньше, чем kirby. Он же используется в тех же вышеупомянутых играх.
- дополнительно, все эти игры, за исключением Kirby, используют также и тот же самый скриптовой движок и могут быть дизассемблированы тем же способом и с применением тех же скриптов.
- принципиальные различия между региональными версиями заключаются в трех вещах: музыка, распределение врагов в комнатах и исправление некоторых багов.
	- музыку, судя по всему, поменяли для PAL версии исключительно для того, чтобы на 50Гц частоте она игралась идентично 60Гц обеих NTSC версий. при сравнении музыкальных данных видно, что последовательности нот остались идентичными, но поменялись длительности и тональности практически у всех участков. у обоих NTSC версий в коде музыки нет никаких отличий.
	- в отличие от NTSC версий, в которых имеется одинаковый неиспользуемый блок с копией данных семплов посреди данных музыки, в PAL версии в том же месте тоже сидит неиспользуемый кусок, но он содержит целый законченный полноценный трек музыки. это полная версия зацикленного трека с катсцены с похищением младенца няней-призраком после третьего уровня. еще более интересно, что он играет в режиме NTSC, тогда как вся остальная музыка в PAL версии переписана на новый тайминг.
	- в отличие от японской версии количество врагов о остальных региональных версиях уменьшено (как и укорочены последовательности врагов для открытия секретных мешочков). также некоторые враги заменены на более простых или изменено их начальное положение и задержки. кое-где были добавлены новые враги, но в целом все эти изменения уменьшили сложность. надо заметить, что это судя по всему, исходный вариант игры, на котором основана PAL версия и американский прототип, содержал как раз изначально уменьшенное число врагов. а для японской врагов добавили. это же потребовало дополнительно ввести в код скриптов уровней изменения банков графики при переходах на уровни, где были размещены новые виды врагов.
	- прототип американской версии не маскирует левый вертикальный ряд пикселов на экране, а также не прячет в этом столбце спрайты, как это сделано в японской и европейской версии. но это скорее всего ошибка или недоделка разработчиков. без скрывания левого ряда тайлов видно, как работает клиппинг спрайтов в этом столбце. спрайты пропадают раньше, чем доходят до края экрана слева, иначе они неизбежно появились бы справа. собственно, такую функцию в PPU NES и ввели для таких целей, так как сама PPU аппаратно отсекать спрайты горизонтально не может.
	- только в американском прототипе есть баг со спрайтами, которые могут давать случайные глюки на экране при недоинициализированном клиппинге. в обоих релизных версиях этот баг исправлен. это также является признаком того, что US версия - ранняя исходная версия игры, которую позже усложнили для японского релиза и на основе которой была сделана европейка.
	- только в европейской версии наконец исправили частичное появление спрайтов врагов, уходящих за левую сторону экрана, с его правой стороны.
	- остальные различия между версиями заключаются в текстах экрана лицензии и названия HAL на титульном экране. скрипты всех трех версий практически идентичны (за исключением указанного выше).
- на титульном экране у большого изображения привидения есть слабо видимые артефакты из-за неправильного использования некоторых тайлов, которе есть в графическом ПЗУ.
	- указательный палец на "виктори" в графическом ПЗУ расположен под буквами "ST" и имеет соответствующие полоски от самого нижнего ряда пикселе надписи. на титульном же экране надпись смещена вправо на 16 пикселей, так что палец приходится под букву "U". это привело к тому, что два тайла верхней части пальца не используются, а вместо них в ПЗУ добавлены два новых тайла с этим местом, но с нижней частью от буквы "U" соответственно.
	- во всех версиях логотипа начало указательного пальца копирует два тайла из его верхней части, делая палец цилиндрическим. в графическом ПЗУ есть два пропущенных неиспользуемых тайла для этой самостоятельной части пальца, которые делают его более естественным сужающимся.
	- во всех версиях логотипа также в ладони под большим пальцем пустое место, повторяющее тайл выше из самого большого пальца. оригинальный, предназначающийся там тайл пропущен и не используется.
	- исходная тайловая карта титульного экрана изображает привидение уже с прорывом посередине. отсутствие прорыва, как и его анимация, делаются через спрайтовый патч, наложенный сверху. часть бока справа, которая касается прорыва в оригинальном изображении, в версии для титульного экрана берет неверный тайл - на один ниже, чем требуется, отсюда сбоку у привидения цветной красный кусочек от кольца знака "стоп". у такого же изображения без прорыва, которое используется для концовки, с этим куском пуза все ок.
	- до кучи графика спрайтового патча для ноги без прорыва отличается от оригинального тайлом в ступне. у привидения с концовки на ноге небольшая складочка. у привидения на титуле ее нет.
- в упакованных ресурсах и в графическом ПЗУ превосходно сохранились данные для экрана с белыми кандзи на черном фоне. IAUAYEAA+AAUELELO чтобы заменить им экран с лого HAL.
- по поводу мешочков с деньгами. некоторые утверждают, что мешочки могут давать ни за что, без поимки привидений и все такое. вранье.
	- каждый мешочек - это такой объект, который является частью списка врагов каждой комнаты. он добавляется при входе в комнату и остается в ней, если не собран.
	- никак иначе мешочек в игру не добавляется.
	- выполнение условия поимки определенных сортов врагов в определенной последовательности обязательно для каждого мешочка - это часть его скрипта.
	- проверка последовательности пойманных врагов производится в процедуре подсчета очков за пойманное привидение.
	- есть один нюанс проверки последовательности. программа принимает только правильные значения. неправильные она просто игнорирует. т.е. для сбора нужной последовательности не требуется строго идти по списку. требуется из всех врагов в комнате заданное число нужных врагов собрать в заданной последовательности, но между ними могут быть собраны и прочие незначащие для мешочка враги. во многих комнатах число врагов больше, чем в списке. если вы убьете одного лишнего до или после начала сбора последовательности или нескольких посреди процесса сбора - ничего не изменится. последовательность будет собрана. проблема может быть только в одном, если собрать какого-то уникального врага между делом, для завершения последовательности его не останется. на этапе с шахтерами есть другая проблема. призраки на вагонетках через несколько итераций исчезают сами. почти везде они участвуют в призовой последовательности сбора. так что, чтобы получить мешочек на этом уровне, требуется торопиться.
	- некоторые комнаты можно посещать несколько раз, как например в первом уровне. для каждого такого посещения есть свой набор врагов для одной и той же комнаты, отличающийся между посещениями. скрипт инициализации конкретной отдельной комнаты же всегда один и применяется каждый раз при заходе в конкретную комнату независимо от последовательности. а так как список врагов для получения мешочка задается тоже в скрипте инициализации, он будет всегда одинаковым независимо от набора врагов. так что, если список призовых врагов в комнате не пустой, это не означает, что там есть мешочек. просто это список врагов от другой итерации этой комнаты, где мешочек был. и враги на уровнях подобраны таким образом, чтобы невозможно было повторно собрать заданную последовательность.
	- в графическом ПЗУ и в теле скрипта присутствуют остатки оставшегося неиспользованным объекта анимированной вращающейся монетки. либо это должен был быть мешочек, сыплющий монетками, либо он должен был замещаться на анимацию монетки... но в финальной версии в библиотеке спрайтов нет указателей на неиспользованный спрайтовый ресурс. видимо идея так и осталась на этапе планирования.
	- код AUEXKOAO позволяет увидеть все мешочки на всех уровнях, где они есть, сразу. возможно только может потребоваться пособирать некоотрых врагов, чтобы появились все остальные из списка для текущей комнаты. мешочек всегда идет последним.
- в графике экрана паузы есть три квадратных иконки: пустая, с сапогами и с бронежилетом. судя по всему изначально планировались какие-то дополнительные повер-апы на скорость и защиту от хитов. данной функциональности в игре нет. еще остатками от этой же задумки, видимо являются тайлы в банке графики предпоследнего уровня для висящего на вешалке пиджака или как раз бронежилета.
- в графике второго уровня есть неиспользуемая фаза анимации открывания шлагбаума, расположенного боком к экрану. используются только две фазы, а самая первая самая длинная - нет.
- там же некоторое количество бекграунд тайлов не используется. например что-то вроде арки с колонной и стоп для рельсов в горизонтальной плоскости.
- там же есть неиспользуемый спрайт то ли замка, то ли куска трубы или свистка..
- в графике третьего уровня есть альтернативная анимация открывания дверей. в релизной версии они просто разъезжаются, а в графике есть два кадра открывания ее внутрь.
- там же есть неиспользуемые тайлы для спрайта кровати. какие-то остатки от катсцены с няней-призраком...
- для уровня музея в блоке графики для спрайтов в ПЗУ присутствуют произвольные объекты вроде валяющихся столбиков, шахматных ладей и тп. обычно подобные предметы предназначены для бросания лизунами на прочих уровнях, но лизуны бросаются другими предметами, так что эти остались неиспользованными.
- аналогично, для уровня с канализацией есть набор тайлов предметов типа мусора - бутылки, ящики, доски... каждый из них имеет две фазы анимации и как бы слегка подтерт снизу. очень похоже на то, что где-то изначально задумывалась комната с плавающим по воде мусором.
- процедура для отправки в ППУ графических ресурсов _ppu_res_send_ex большая и универсальная. она сама определяет, в какой момент рендера приходят данные. если рендер включен, она выбирает заталкивание графики в очередь, если рендер выключен, сразу пишет в ППУ. в этой же процедуре есть вторая отдельная ветка кода для граф ресурсов вертикальной ориентации - у которых ширина меньше высоты. такие ресурсы оптимальнее записывать с вертикальным приращением адреса, что она и делает. эта ветка - полная копия основного цикла. но с вертикальным флагом. тем не менее эта ветка никогда в игре не используется. все ресурсы там горизонтальные.
- большая неиспользуемая ветка для специального режима данных есть и в процедуре вывода спрайтов. в данной игре она тоже не используется.
- во всех версиях игры присутствует оригинальный баг во втором уровне. если в вертикальном уровне открыть верхний шлагбаум, но не пройти дальше, а вернуться, то можно заметить попорченный тайл у начала второй половины комнаты. это происходит из-за ошибки в процедуре рисования закрытой двери. вместо 2 мета тайлов она рисует четыре, два из которых приходятся на те два кривых тайла. если бежать всегда вперед, то этого бага можно и не заметить...

TODO

	- что можно сделать нового в игре.
		- добавить новые бонусы типа ботинок и бронежилета. сделать соответственное отображение собранных предметов на экране паузы
		- задействовать звездочки для отображения рейтинга прохождения либо сложности, либо числа собранных/оставшихся врагов на уровне. хз для чего они предназначались, но их можно приспособить для чего угодно
		- расширить число игровых элементов, изменяемых параметром сложности. в текущей версии только число жизней и очки для получения очередной жизни меняются с изменением сложности. можно сделать списки врагов динамическими для каждой сложности, выводить больше врагов на экран одновременно.
		- каким-то образом сделать разницу между разными персонажами, выбираемыми для игры. сейчас разница только во внешнем виде. почему бы не дать им какие-то специальные характеристики, меняющие механику игры за такого персонажа. скорость, число жизней, длина луча, длина ловушки, тупизна и тп... естественно тут потребуется придумать какую-то систему балансировки. чтобы не получислось случая, когда выбираешь самое крутое сочетание персонажей, которое рвет все остальные варианты.
		- меню выбора уровней
		- отладка спрайтов с выбором банков графики и палитры..